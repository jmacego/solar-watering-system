/**
 *  @fileOverview Grace
 */

/* need to use the CSL module to generate the CSL code */
var CSL = xdc.useModule('ti.mcu.msp430.csl.CSL');
var ADC10 = xdc.useModule('ti.mcu.msp430.csl.adc.ADC10');
var USI = xdc.useModule('ti.mcu.msp430.csl.communication.USI');
var Timer0_A3 = xdc.useModule('ti.mcu.msp430.csl.timer.Timer0_A3');
CSL.configApiVersion = "1.20.00";

/* these modules should be part of every project */
var BCSplus = xdc.useModule('ti.mcu.msp430.csl.clock.BCSplus');
var WDTplus = xdc.useModule('ti.mcu.msp430.csl.watchdog.WDTplus');
var System = xdc.useModule('ti.mcu.msp430.csl.system.System');
var GPIO = xdc.useModule('ti.mcu.msp430.csl.gpio.GPIO');
var InterruptVectors = xdc.useModule('ti.mcu.msp430.csl.interrupt_vectors.InterruptVectors');

/* set stack and heap sizes as appropriate for MSP430 */
Program.sysStack = 0;
Program.stack = 64;
Program.heap = 0;
Program.argSize = 0;

/* Enable global interrupt */
System.srRegs.SR.GIE = System.srDefs.GIE;
ADC10.regs.ADC10CTL0.REFON = ADC10.defs.REFON;
ADC10.regs.ADC10CTL0.ADC10SHT = ADC10.defs.ADC10SHT_3;
ADC10.regs.ADC10CTL1.ADC10DIV = ADC10.defs.ADC10DIV_3;
ADC10.regs.ADC10CTL0.ADC10ON = ADC10.defs.ADC10ON;
ADC10.regs.ADC10CTL1.INCH = ADC10.defs.INCH_10;
ADC10.regs.ADC10CTL0.SREF = ADC10.defs.SREF_1;
ADC10.regs.interruptSource[0].interruptEnable = true;
ADC10.regs.interruptSource[0].interruptHandler = true;
ADC10.regs.ADC10CTL0.ADC10IE = ADC10.defs.ADC10IE;
ADC10.regs.ADC10CTL1.CONSEQ = ADC10.defs.CONSEQ_0;
System.ie1Regs.interruptSource[1].interruptHandler = true;
System.ie1Regs.interruptSource[4].interruptHandler = true;
System.ie1Regs.interruptSource[5].interruptHandler = true;
USI.regs.USICTL1.USII2C = USI.defs.USII2C;
USI.showSelectionPage = false;
USI.regs.USICKCTL.USICKPL = USI.defs.USICKPL;
GPIO.regs.P1SEL.Bit6 = GPIO.defs.BIT6;
USI.regs.USICTL0.USIPE6 = USI.defs.USIPE6;
GPIO.regs.P1SEL.Bit7 = GPIO.defs.BIT7;
USI.regs.USICTL0.USIPE7 = USI.defs.USIPE7;
USI.regs.interruptSource[0].interruptHandler = true;
USI.regs.interruptSource[1].interruptHandler = true;
USI.regs.USICTL1.USISTTIE = USI.defs.USISTTIE;
USI.regs.USICTL1.USIIE = USI.defs.USIIE;
BCSplus.userInputDCO = 8000.0;
BCSplus.aclkPin[0] = 1;
GPIO.regs.P1DIR.Bit0 = GPIO.defs.BIT0;
GPIO.regs.P1SEL.Bit0 = GPIO.defs.BIT0;
BCSplus.regs.LFXT1CLKHz = 32768.0;
BCSplus.regs.BCSCTL3.LFXT1S = BCSplus.defs.LFXT1S_0;
CSL.device.vcc = 3.6;
Timer0_A3.regs.TA0CCTL1.CCIE = Timer0_A3.defs.CCIE;
Timer0_A3.regs.interruptSource[2].interruptEnable = true;
Timer0_A3.regs.interruptSource[2].interruptHandler = true;
Timer0_A3.regs.interruptSource[0].interruptHandler = true;
Timer0_A3.regs.interruptSource[3].interruptHandler = true;
Timer0_A3.regs.TA0CCTL0.OUT = Timer0_A3.defs.OUT;
Timer0_A3.regs.TA0CCTL1.CAP = Timer0_A3.defs.CAP;
Timer0_A3.ccrXTimerSelection_PowerUser[1] = xdc.module("ti.mcu.msp430.csl.timer.ITimer").CCRxTimerSelection_PowerUser_Selection_2;
Timer0_A3.ccrOutputPin[2] = 0;
Timer0_A3.ccrXTimerSelection_BasicView[1] = xdc.module("ti.mcu.msp430.csl.timer.ITimer").CCRxTimerSelection_BasicView_Selection_2;
Timer0_A3.regs.TA0CCR1 = 0;
Timer0_A3.regs.TA0CCTL1.SCS = Timer0_A3.defs.SCS;
Timer0_A3.regs.TA0CCTL1.CM = Timer0_A3.defs.CM_1;
Timer0_A3.regs.TA0CTL.TASSEL = Timer0_A3.defs.TASSEL_2;
Timer0_A3.inputClockToTimer = 8000.0;
Timer0_A3.regs.TA0CTL.MC = Timer0_A3.defs.MC_2;
Timer0_A3.regs.interruptSource[1].interruptEnable = false;
Timer0_A3.regs.TA0CCTL0.CCIE = Timer0_A3.defs.CCIE_OFF;
Timer0_A3.regs.interruptSource[1].interruptHandler = true;
Timer0_A3.inClkPin[0] = 0;
Timer0_A3.txClkPin[0] = 0;
Timer0_A3.regs.TA0CTL.ID = Timer0_A3.defs.ID_3;
